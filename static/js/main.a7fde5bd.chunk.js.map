{"version":3,"sources":["DatePicker.js","TextField.js","EditableSection.js","WeatherCard.js","EmptyResults.js","App.js","index.js"],"names":["DatePicker","className","this","props","title","onChange","value","Component","TextField","type","EditableSection","date","onStartDateChange","startDate","onEndDateChange","endDate","e","onLocationChange","target","location","WeatherCard","weather","weatherClass","key","EmptyResults","class","App","fetch","headers","Accept","then","response","json","setState","jsonData","state","startDateFilter","Date","endDateFilter","filteredWeatherCards","filter","weatherEntry","locationFilter","town","toLowerCase","startsWith","map","item","changedDate","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7fde5bd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport \"./styles/DatePicker.css\";\n\nclass DatePicker extends Component {\n  render() {\n    return (\n      <div className=\"inputWrapper\">\n        <p>{this.props.title}</p>\n        <DateTimePicker\n          onChange={this.props.onChange}\n          value={this.props.value}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DatePicker;\n","import React, { Component } from \"react\";\nimport \"./styles/TextField.css\";\n\nclass TextField extends Component {\n  render() {\n    return (\n      <div className=\"inputWrapper\">\n        <p>{this.props.title}</p>\n        <input\n          className=\"textField\"\n          type=\"text\"\n          onChange={this.props.onChange}\n          value={this.props.value}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TextField;\n","import React, { Component } from \"react\";\nimport \"./styles/EditableSection.css\";\nimport DatePicker from \"./DatePicker.js\";\nimport TextField from \"./TextField.js\";\n\nclass EditableSection extends Component {\n  render() {\n    return (\n      <div className=\"editable-section\">\n        <DatePicker\n          title=\"Start Date\"\n          onChange={(date) => this.props.onStartDateChange(date)}\n          value={this.props.startDate}\n        />\n        <DatePicker\n          title=\"End Date\"\n          onChange={(date) => this.props.onEndDateChange(date)}\n          value={this.props.endDate}\n        />\n        <TextField\n          title=\"Location\"\n          onChange={(e) => this.props.onLocationChange(e.target.value)}\n          value={this.props.location}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EditableSection;\n","import React, { Component } from \"react\";\nimport \"./styles/WeatherCard.css\";\n\nclass WeatherCard extends Component {\n  render() {\n    const { date, location, weather } = this.props;\n    if (date) {\n      let weatherClass = \"sunny\";\n      if (weather === \"Rainy\") {\n        weatherClass = \"rainy\";\n      } else if (weather === \"Partly Cloudy\") {\n        weatherClass = \"partly-cloudy\";\n      } else if (weather === \"Cloudy\") {\n        weatherClass = \"cloudy\";\n      }\n      return (\n        <div className=\"weather-card\" key={date + location}>\n          <div className=\"weather-datetime\">{date}</div>\n          <div\n            className={\"weather-forecast \" + weatherClass}\n            title={weather}\n          ></div>\n          <div className=\"weather-location\">{location}</div>\n        </div>\n      );\n    }\n    return <div></div>;\n  }\n}\n\nexport default WeatherCard;\n","import React, { Component } from \"react\";\nimport \"./styles/EmptyResults.css\";\n\nclass EmptyResults extends Component {\n  render() {\n    return (\n      <h2 class=\"empty-results\">\n        There are no results for the filters selected.\n        <br />\n        <br />\n        Please validate your selections and try again.\n      </h2>\n    );\n  }\n}\n\nexport default EmptyResults;\n","import React, { Component } from \"react\";\nimport EditableSection from \"./EditableSection\";\nimport WeatherCard from \"./WeatherCard\";\nimport EmptyResults from \"./EmptyResults\";\nimport \"./styles/App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    //Go grab the data from test-data.json\n    fetch(\"/test-data.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({ jsonData: json });\n      });\n\n    //tiny app, so god-state is probably fine\n    this.state = {\n      startDateFilter: new Date(\"01/01/2020\"),\n      endDateFilter: new Date(\"01/02/2020\"),\n    };\n  }\n  render() {\n    let filteredWeatherCards =\n      this.state.jsonData &&\n      this.state.jsonData\n        .filter(\n          (weatherEntry) =>\n            !this.state.startDateFilter ||\n            new Date(weatherEntry.date) >= this.state.startDateFilter\n        )\n        .filter(\n          (weatherEntry) =>\n            !this.state.endDateFilter ||\n            new Date(weatherEntry.date) <= this.state.endDateFilter\n        )\n        .filter(\n          (weatherEntry) =>\n            !this.state.locationFilter ||\n            weatherEntry.town\n              .toLowerCase()\n              .startsWith(this.state.locationFilter)\n        )\n        .map((item) => (\n          <WeatherCard\n            date={item.date}\n            weather={item.weather}\n            location={item.town}\n          />\n        ));\n\n    return (\n      <div className=\"App\">\n        <EditableSection\n          startDate={this.state.startDateFilter}\n          endDate={this.state.endDateFilter}\n          location={this.state.locationFilter} // ?\n          onStartDateChange={(changedDate) =>\n            this.setState({ startDateFilter: changedDate })\n          }\n          onEndDateChange={(changedDate) =>\n            this.setState({ endDateFilter: changedDate })\n          }\n          onLocationChange={(location) =>\n            this.setState({ locationFilter: location })\n          }\n        />\n        <div className=\"results-section\">\n          {filteredWeatherCards && filteredWeatherCards.length ? (\n            filteredWeatherCards\n          ) : (\n            <EmptyResults />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}